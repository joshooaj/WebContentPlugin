name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
      - 'mkdocs*.yml'
      - '.github/workflows/test.yml'
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - 'mkdocs*.yml'

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Azure login
        if: github.ref == 'refs/heads/main'
        uses: Azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache WebView2
        id: cache-webview
        uses: actions/cache@v4
        with:
          path: .\.cache
          key: ${{ runner.os }}-webview

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build
        id: build
        shell: powershell
        run: |
          $result = .\build.ps1
          $result | Format-Table
          "INSTALLERNAME=CascadiaWebContentPlugin.$($result.Version)" | Add-Content $env:GITHUB_OUTPUT
          "OUTPUTDIRECTORY=.\output\Setup\en-US\" | Add-Content $env:GITHUB_OUTPUT

      # - name: Sign module
      #   if: github.ref == 'refs/heads/main'
      #   shell: powershell
      #   env:
      #     AZUREKEYVAULT_URI: ${{ secrets.AZUREKEYVAULT_URI }}
      #     AZUREKEYVAULT_CERTNAME: ${{ secrets.AZUREKEYVAULT_CERTNAME }}
      #   run: |
      #       .\build.ps1 -Task SignWithAzureSignTool

      - name: Upload to Azure
        env:
          AZURE_STORAGE_NAME: ${{ secrets.AZURE_STORAGE_NAME }}
          AZURE_BLOB_NAME: ${{ secrets.AZURE_BLOB_NAME }}
        shell: powershell
        run: |
          $installer = Get-ChildItem -Path .\output\Setup\en-US\*.msi
          (Get-FileHash $installer.FullName -Algorithm SHA256).Hash | Set-Content CascadiaWebContentPlugin.msi.sha256.txt
          az storage blob upload --file $installer.FullName --account-name $env:AZURE_STORAGE_NAME --container-name $env:AZURE_BLOB_NAME --name CascadiaWebContentPlugin.msi --overwrite --auth-mode login
          az storage blob upload --file CascadiaWebContentPlugin.msi.sha256.txt --account-name $env:AZURE_STORAGE_NAME --container-name $env:AZURE_BLOB_NAME --name CascadiaWebContentPlugin.msi.sha256.txt --overwrite --auth-mode login

      - name: Upload as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.INSTALLERNAME }}
          path: ${{ steps.build.outputs.OUTPUTDIRECTORY }}
